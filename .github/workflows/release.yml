name: Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g., v0.1.0)'
        required: true
        default: 'v0.1.0'

env:
  CARGO_TERM_COLOR: always

jobs:
  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
    - uses: actions/checkout@v4
    - name: Create Release
      id: create_release
      uses: softprops/action-gh-release@v2.3.2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.event.inputs.version }}
        name: Release ${{ github.event.inputs.version }}
        body: |
          Release ${{ github.event.inputs.version }}
          
          ## Changes
          - High-performance terminal search plugin for Kitty
          - Built in Rust for optimal performance
          - Support for large buffers and continuous output
        draft: false
        prerelease: false

  build-and-upload:
    name: Build and Upload
    needs: create-release
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact_name: kitty-fast-search
            asset_name: kitty-fast-search-linux-x86_64
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            artifact_name: kitty-fast-search.exe
            asset_name: kitty-fast-search-windows-x86_64.exe
          - os: macos-latest
            target: x86_64-apple-darwin
            artifact_name: kitty-fast-search
            asset_name: kitty-fast-search-macos-x86_64
          - os: macos-latest
            target: aarch64-apple-darwin
            artifact_name: kitty-fast-search
            asset_name: kitty-fast-search-macos-aarch64

    runs-on: ${{ matrix.os }}
    
    steps:
    - uses: actions/checkout@v4
    
    - uses: dtolnay/rust-toolchain@stable
      with:
        targets: ${{ matrix.target }}
    
    - uses: Swatinem/rust-cache@v2.7.8
    
    - name: Build
      run: cargo build --release --target ${{ matrix.target }}
    
    - name: Upload Release Asset
      uses: softprops/action-gh-release@v2.3.2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.event.inputs.version }}
        files: target/${{ matrix.target }}/release/${{ matrix.artifact_name }}